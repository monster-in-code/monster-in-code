declare type QuerySetter = (...args: Parameters<History['pushState']>) => void;
export declare enum ViewMode {
    Normal = "",
    Presenter = "presenter",
    Next = "next"
}
export declare const generateURLfromParams: (params: URLSearchParams, { protocol, host, pathname, hash }?: Pick<Location, "search" | "host" | "pathname" | "protocol" | "hash">) => string;
export declare const getViewMode: () => ViewMode;
export declare const readQuery: (name: string) => string | null;
export declare const popQuery: (name: string) => string | null;
export declare const setQuery: (queries: Record<string, string | false | null | undefined>, opts?: {
    location?: Pick<Location, "search" | "host" | "pathname" | "protocol" | "hash"> | undefined;
    setter?: QuerySetter | undefined;
}) => void;
export declare const setViewMode: () => void;
export declare const storage: {
    available: boolean;
    get: (key: string) => string | null;
    set: (key: string, value: string) => boolean;
    remove: (key: string) => boolean;
};
export {};
